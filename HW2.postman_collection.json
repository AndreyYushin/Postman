{
	"info": {
		"_postman_id": "506f5890-f4d7-406b-869b-c30ceae325c1",
		"name": "HW2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25031027"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Проверить, что в body приходит правильный string.\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"This is the first responce from server!ss\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5007/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5007",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Спарсить response body в json.\r",
							"var respData = pm.response.json();\r",
							"console.log(respData);\r",
							"//Проверить, что name в ответе равно name s request (name вбить руками).\r",
							"pm.test(\"Check name\", function () {\r",
							"    pm.expect(respData.name).to.eql(\"Andrey\");\r",
							"});\r",
							"//Проверить, что age в ответе равно age s request (age вбить руками).\r",
							"pm.test(\"Check age\", function () {\r",
							"    pm.expect(respData.age).to.eql(\"28\");\r",
							"});\r",
							"//Проверить, что salary в ответе равно salary s request (salary вбить руками).\r",
							"pm.test(\"Check salary\", function () {\r",
							"    pm.expect(respData.salary).to.eql(3000);\r",
							"});\r",
							"// Спарсить request.\r",
							"var reqData = request.data;\r",
							"console.log(reqData)\r",
							"// Проверить, что name в ответе равно name s request (name забрать из request).\r",
							"var reqName = reqData.name\r",
							"pm.test(\"Check name\", function () {\r",
							"    pm.expect(respData.name).to.eql(reqName);\r",
							"});\r",
							"//Проверить, что age в ответе равно age s request (age забрать из request).\r",
							"var reqAge = reqData.age\r",
							"pm.test(\"Check age\", function () {\r",
							"    pm.expect(respData.age).to.eql(reqAge)\r",
							"} );\r",
							"//Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"var reqSalary = +reqData.salary\r",
							"pm.test(\"Check salary\", function () {\r",
							"        pm.expect (respData.salary).to.eql(reqSalary)\r",
							"} );\r",
							"//Вывести в консоль параметр family из response.\r",
							"console.log(respData.family)\r",
							"//Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request).\r",
							"pm.test(\"Check salary 1,5 year\", function () {\r",
							"    pm.expect (respData.family.u_salary_1_5_year).to.eql(reqSalary*4)\r",
							"} );\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Andrey",
							"type": "text"
						},
						{
							"key": "age",
							"value": "28",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "3000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Спарсить response body в json.\r",
							"var respData = pm.response.json();\r",
							"console.log(respData);\r",
							"//Спарсить request.\r",
							"var reqData = pm.request.url.query.toObject();\r",
							"console.log(reqData);// Когда забираем request из Params\r",
							"//или\r",
							"var reqData2 = request.data;\r",
							"console.log(reqData2);// Когда забираем request из Body form-data\r",
							"//Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"var respName = respData.name\r",
							"var reqName = reqData.name\r",
							"pm.test (\"Check name\", function() {\r",
							"    pm.expect(respName).to.eql(reqName)\r",
							"} );\r",
							"//Проверить, что age в ответе равно age s request (age забрать из request).\r",
							"var respAge = respData.age\r",
							"var reqAge = reqData.age\r",
							"pm.test (\"Check age\", function() {\r",
							"    pm.expect(respAge).to.eql(reqAge)\r",
							"} );\r",
							"//Проверить, что salary в ответе равно salary s request (salary забрать из request).\r",
							"var respSalary = respData.salary\r",
							"var reqSalary = +reqData.salary\r",
							"pm.test (\"Check salary\", function () {\r",
							"    pm.expect(respSalary).to.eql(reqSalary)\r",
							"});\r",
							"//Вывести в консоль параметр family из response.\r",
							"var respFamily = respData.family\r",
							"console.log(respFamily);\r",
							"//Проверить, что у параметра dog есть параметры name.\r",
							"var respPets = respData.family.pets;\r",
							"var respDog = respPets.dog;\r",
							"pm.test(\"Проверка наличия параметра name в dog\", function(){\r",
							"    if(respDog && respDog.name){\r",
							"    pm.expect(respDog.name).to.exist;\r",
							"    console.log(\"Параметр name присутствует у параметра dog\");\r",
							"    }else{\r",
							"        console.log(\"Параметр name отсутствует у параметра dog\");\r",
							"    }\r",
							"});\r",
							"// Проверить, что у параметра dog есть параметры age.\r",
							"pm.test (\"Проверка наличия параметра age у параметра dog\", function(){\r",
							"    if(respDog && respDog.age){\r",
							"        pm.expect(respDog.age).to.exist;\r",
							"        console.log(\"Параметр age присутствует у параметра dog\");\r",
							"    }else{\r",
							"        console.log(\"Параметр age отсутствует у dog\");\r",
							"    }\r",
							"});\r",
							"// Проверить, что параметр name имеет значение Luky.\r",
							"pm.test(\"Проверка значения Luky у параметра name\", function(){\r",
							"    pm.expect(respDog.name).to.eql(\"Luky\");\r",
							"});\r",
							"//Проверить, что параметр age имеет значение 4.\r",
							"pm.test (\"Проверка значения 4 у параметра age\", function() {\r",
							"    pm.expect(respDog.age).to.eql(4);\r",
							"} );"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://162.55.220.72:5008/object_info_3?name=Andrey&age=28&salary=3000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5008",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Andrey"
						},
						{
							"key": "age",
							"value": "28"
						},
						{
							"key": "salary",
							"value": "3000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Спарсить response body в json.\r",
							"var respData = pm.response.json();\r",
							"console.log(respData);\r",
							"//Спарсить request.\r",
							"var reqData = pm.request.url.query.toObject();\r",
							"console.log(reqData);\r",
							"// Проверить, что name в ответе равно name s request (name забрать из request).\r",
							"var respName = respData.name;\r",
							"var reqName = reqData.name;\r",
							"pm.test(\"Check name\", function() {\r",
							"    pm.expect(respName).to.eql(reqName)\r",
							"});\r",
							"//Проверить, что age в ответе равно age из request (age забрать из request).\r",
							"var respAge = respData.age;\r",
							"var reqAge = +reqData.age;\r",
							"pm.test(\"Check age\", function() {\r",
							"    pm.expect(respAge).to.eql(reqAge)\r",
							"});\r",
							"//Вывести в консоль параметр salary из request.\r",
							"var reqSalary = +reqData.salary;\r",
							"console.log(reqSalary);\r",
							"//Вывести в консоль параметр salary из response.\r",
							"var respSalary = respData.salary; \r",
							"console.log(respSalary);\r",
							"//Вывести в консоль 0-й элемент параметра salary из response.\r",
							"console.log(respSalary[0]);\r",
							"//Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"console.log(respSalary[1]);\r",
							"//Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"console.log(respSalary[2]);\r",
							"//Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request).\r",
							"pm.test(\"Check salary 0\", function () {\r",
							"    pm.expect(respSalary[0]).to.eql(reqSalary)\r",
							"});\r",
							"//Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request).\r",
							"pm.test(\"Check salary 1\", function () {\r",
							"    pm.expect(Number(respSalary[1])).to.eql(reqSalary*2)\r",
							"});\r",
							"//Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request).\r",
							"pm.test(\"Check salary 2\", function () {\r",
							"    pm.expect (Number(respSalary[2])).to.eql(reqSalary*3)\r",
							"});\r",
							"//Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.\r",
							"for (item in respData.salary) {\r",
							"    console.log(\"Элемент\",respData.salary[item]);\r",
							"};"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{url8}}/object_info_4?name={{Name}}&age={{Age}}&salary={{Salary}}",
					"host": [
						"{{url8}}"
					],
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "{{Name}}"
						},
						{
							"key": "age",
							"value": "{{Age}}"
						},
						{
							"key": "salary",
							"value": "{{Salary}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Спарсить response body в json.\r",
							"let respData = pm.response.json();\r",
							"//Спарсить request.\r",
							"let reqData = request.data;\r",
							"console.log(respData);\r",
							"//Проверить, что json response имеет параметр start_qa_salary.\r",
							"if (\"start_qa_salary\" in respData){\r",
							"    console.log(\"Параметр присутствует в JSON-ответе\");\r",
							"}\r",
							"else {\r",
							"    console.log(\"Параметр отсутствует в JSON-ответе \")\r",
							"}\r",
							"//Проверить, что json response имеет параметр qa_salary_after_6_months.\r",
							"if(\"qa_salary_after_6_months\" in respData){\r",
							"    console.log(\"Параметр присутствует в JSON-ответе\");\r",
							"}else{\r",
							"    console.log(\"Параметр отсутствует в JSON-ответе\");\r",
							"}\r",
							"// Проверить, что json response имеет параметр qa_salary_after_12_months.\r",
							"if(\"qa_salary_after_12_months\" in respData){\r",
							"    console.log(\"Параметр присутствует в JSON-ответе\");\r",
							"}else{\r",
							"    console.log(\"Параметр отсутствует в JSON-ответе\");\r",
							"}\r",
							"// Проверить, что json response имеет параметр qa_salary_after_1.5_year.\r",
							"if(\"qa_salary_after_1.5_year\" in respData){\r",
							"    console.log(\"Параметр присутствует в JSON-ответе\");\r",
							"}else{\r",
							"    console.log(\"Параметр отсутствует в JSON-ответе\");\r",
							"}\r",
							"//Проверить, что json response имеет параметр qa_salary_after_3.5_years.\r",
							"if(\"qa_salary_after_3.5_years in respData\"){\r",
							"    console.log(\"Параметр присутствует в JSON-ответе\");\r",
							"}else{\r",
							"    console.log(\"Параметр отсутствует в JSON-ответе\");\r",
							"}\r",
							"//Проверить, что json response имеет параметр person.\r",
							"if(\"person\" in respData){\r",
							"    console.log(\"Параметр присутствует в JSON-ответе\");\r",
							"}else{\r",
							"    console.log(\"Параметр отсутствует в JSON-ответе\");\r",
							"}\r",
							"// Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request).\r",
							"pm.test(\"Параметр salary равен параметру start_qa_salary\", function(){\r",
							"    let respStart = respData.start_qa_salary;\r",
							"    let reqSalary = +reqData.salary;\r",
							"    pm.expect(respStart).to.eql(reqSalary);\r",
							"});\r",
							"//Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request).\r",
							"pm.test(\"Параметр qa_salary_after_6_months равен параметру salary*2\", function(){\r",
							"    let respSalary6m = respData.qa_salary_after_6_months;\r",
							"    let reqSalary = +reqData.salary;\r",
							"    pm.expect(respSalary6m).to.eql(reqSalary*2);\r",
							"});\r",
							"//Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request).\r",
							"pm.test(\"Параметр qa_salary_after_12_months равен параметру salary*2.7\", function(){\r",
							"    let respSalary12m = respData.qa_salary_after_12_months;\r",
							"    let reqSalary = +reqData.salary;\r",
							"    pm.expect(respSalary12m).to.eql(reqSalary*2.7);\r",
							"});\r",
							"// Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request).\r",
							"pm.test(\"Параметр qa_salary_after_1.5_year равен параметру salary*3.3\", function(){\r",
							"    let respSalary1_5y = respData[\"qa_salary_after_1.5_year\"];\r",
							"    let reqSalary = +reqData.salary;\r",
							"    pm.expect(respSalary1_5y).to.eql(reqSalary*3.3);\r",
							"});\r",
							"//Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request).\r",
							"pm.test(\"Параметр qa_salary_after_3.5_years равен параметру salary*3.8\", function(){\r",
							"    let respSalary3_5y = respData[\"qa_salary_after_3.5_years\"];\r",
							"    let reqSalary = +reqData.salary;\r",
							"    pm.expect(respSalary3_5y).to.eql(reqSalary*3.8);\r",
							"});\r",
							"//Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request).\r",
							"pm.test(\"Проверить что 1 элемент из u_name равен salary\", function(){\r",
							"    let personName1 = respData.person.u_name[1];\r",
							"    let reqSalary = +reqData.salary;\r",
							"    pm.expect(personName1).to.eql(reqSalary);\r",
							"});\r",
							"//Проверить, что параметр u_age равен age из request (age забрать из request).\r",
							"pm.test(\"Параметр u_age равен параметру age\", function(){\r",
							"    let respAge = respData.person.u_age;\r",
							"    let reqAge = +reqData.age;\r",
							"    pm.expect(respAge).to.eql(reqAge);\r",
							"}\r",
							");\r",
							"//Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request).\r",
							"pm.test(\"Параметр u_salary_5_years равен параметру salary*4.2\", function(){\r",
							"    let respSalary5y = respData.person.u_salary_5_years;\r",
							"    let reqSalary = +reqData.salary;\r",
							"    pm.expect(respSalary5y).to.eql(reqSalary*4.2);\r",
							"});\r",
							"//***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.\r",
							"let respPerson = respData.person;\r",
							"for (key in respPerson) {\r",
							"    console.log(key, respPerson[key]);\r",
							"};\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "salary",
							"value": "{{Salary}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{Age}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "{{Name}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url8}}/user_info_2",
					"host": [
						"{{url8}}"
					],
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status code is 200\", function () {",
					"    pm.response.to.have.status(200);",
					"});"
				]
			}
		}
	]
}